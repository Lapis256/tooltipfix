plugins {
	id 'dev.architectury.loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.mod_id
version = project.mod_version
group = project.maven_group

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}

loom {
	forge {
		mixinConfigs = [
				"${mod_id}.mixins.json"
		]
	}
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
		minecraft_version: minecraft_version,
		forge_version: forge_version,
		mod_id: mod_id,
		mod_version: mod_version,
		mod_authors: mod_authors,
]
processResources {
	inputs.properties replaceProperties
	replaceProperties.put 'project', project

	filesMatching(resourceTargets) {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.mod_id}" }
	}

	manifest {
		attributes([
				"Specification-Title"     : mod_id,
				"Specification-Vendor"    : mod_authors,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : mod_authors,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
